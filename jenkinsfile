def notifyBuild(String buildStatus = 'STARTED') {
            // build status of null means successful
            buildStatus =  buildStatus ?: 'SUCCESSFUL'

            // Default values
            def colorName = 'RED'
            def colorCode = '#FF0000'
            def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
            def summary = "${subject} (${env.BUILD_URL})"
            def details = """<p>STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
            <p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>"""

            // Override default values based on build status
            if (buildStatus == 'STARTED') {
                color = 'YELLOW'
                colorCode = '#FFFF00'
            } else if (buildStatus == 'SUCCESSFUL') {
                color = 'GREEN'
                colorCode = '#00FF00'
            } else {
                color = 'RED'
                colorCode = '#FF0000'
            }

            // Send notifications
            slackSend (channel: '@me', color: colorCode, message: summary)
        }
    } 

node {

echo "Job Name is: ${env.JOB_NAME}"
echo "Node Name is: ${env.NODE_NAME}"


def mavenHome = tool name: 'maven3.8.5'
    
//get the code from git hub repo
stage('Checkout Code') {
git branch: 'development', credentialsId: 'tomcat', url: 'https://github.com/kravicr/maven-web-application.git'
}
// do the build using maven build tool
stage ('Build') {
sh "${mavenHome}/bin/mvn clean package"
}
// Exicute SonarQube Report
stage('ExicuteSonarQubeReport'){
sh "${mavenHome}/bin/mvn sonar:sonar"
}
// Upload Artifacts into Nexus repo
stage('UploadArtifactsintoNexus'){
sh "${mavenHome}/bin/mvn deploy"
}
// Deploy Application Into Tomcat Server
stage('DeployApplicationIntoTomcatServer'){
sshagent(['959bf380-7086-467d-b4ab-36b0b6c20cc8']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@15.206.127.104:/opt/apache-tomcat-9.0.62/webapps"
}  
}
}
